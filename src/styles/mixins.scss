@import "./effects.scss";
@import "./responsive.scss";

@mixin card {
  background-color: var(--bs-dark-secondary);
  border: 1px solid var(--bs-white);
  border-radius: var(--bs-radius-large);
  padding: 20px;
}
@mixin focus() {
  &:hover {
    transition: 0.75s;
    transform: scale(1.01);
  }
}
@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
@mixin increaseOnHover() {
  &:hover {
    transition: 0.3s;
    transform: scale(1.05);
  }
}
@mixin brightnessOnHover() {
  &:hover {
    filter: brightness(0.7);
  }
}

@mixin border-radius(
  $top-left: null,
  $top-right: null,
  $bottom-right: null,
  $bottom-left: null,
  $important: false
) {
  $radius-values: $top-left $top-right $bottom-right $bottom-left;

  @each $prefix in -webkit-, -moz- {
    #{$prefix}border-radius: $radius-values;
  }

  border-radius: $radius-values;

  @if $important {
    @each $prefix in -webkit-, -moz- {
      #{$prefix}border-radius: $radius-values !important;
    }
    border-radius: $radius-values !important;
  }
}

@mixin modal-padding($padding: 20px) {
  [class~="modal-header"] {
    padding: $padding;
  }
  [class~="modal-body"] {
    overflow: visible;
    padding: $padding;
  }
  /* Selector to apply $padding padding when there is no modal-header or modal-footer inside .Modal */
  [class~="modal-body"]:only-child:not(.modal-header):not(.modal-footer) {
    overflow: visible;
    padding: $padding;
  }
  /* Selector to apply padding of 0px $padding $padding $padding when there is modal-header inside .Modal */
  [class~="modal-header"] + [class~="modal-body"] {
    overflow: visible;
    padding: 0px $padding $padding $padding;
  }
  [class~="modal-footer"] {
    padding: 0px $padding $padding $padding;
  }
  /* Selector to apply $padding padding when there is only modal-footer inside .Modal */
  [class~="modal-footer"]:only-child {
    padding: $padding;
  }
}

// Shared properties and keyframes for modals animations
@mixin modal-animation($direction, $duration) {
  $bezier: cubic-bezier(0.36, 0.07, 0.19, 0.97);
  $start: if($direction == "up", 100%, -100%);
  $end: 0;

  animation: slide-#{$direction} $duration $bezier both;

  @keyframes slide-#{$direction} {
    0% {
      transform: translateY($start);
    }
    100% {
      transform: translateY($end);
    }
  }
}

// Specific modals animation slide up from bottom
@mixin slide-up-animation($duration: 0.5s) {
  @include modal-animation("up", $duration);
}

// Specific modals animation to close when cames from bottom as a slide up
@mixin slide-up-close-animation($duration: 0.5s) {
  @include modal-animation("up-close", $duration);
  @keyframes slide-up-close {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(100%);
    }
  }
}

// Specific modals animation slide down from top
@mixin slide-down-animation($duration: 0.5s) {
  @include modal-animation("down", $duration);
}

// Specific modals animation to close when cames from top as a slide down
@mixin slide-down-close-animation($duration: 0.5s) {
  @include modal-animation("down-close", $duration);
  @keyframes slide-down-close {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(-100%);
    }
  }
}

@mixin skeletonLoading {
  border-radius: var(--bs-radius-medium-large);
  /* Horizontal gradient background in dark gray tones */
  background-image: linear-gradient(
    to right,
    #222222 0%,
    #333333 50%,
    #222222 100%
  );
  /* Background size */
  background-size: 200% 100%;
  /* Background position */
  background-position: -100% 0;
  /* Background slide animation */
  animation: backgroundSlide 1s ease-in-out infinite;

  @keyframes backgroundSlide {
    0% {
      background-position: -100% 0;
    }
    /* Slide background from right to left */
    100% {
      background-position: 100% 0;
    }
  }
}

@mixin fadeIn {
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

@mixin gradient-border($height: 60px, $radius: var(--bs-radius-large)) {
  &::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0px;
    right: 0px;
    width: 100%;
    height: $height;
    pointer-events: none;
    border-bottom-left-radius: $radius;
    border-bottom-right-radius: $radius;
    background: linear-gradient(180deg, rgba(31, 31, 34, 0) 0%, #1f1f22 100%);
  }
}

@mixin border-radius(
  $top-left: null,
  $top-right: null,
  $bottom-right: null,
  $bottom-left: null,
  $important: false
) {
  $radius-values: $top-left $top-right $bottom-right $bottom-left;

  @each $prefix in -webkit-, -moz- {
    #{$prefix}border-radius: $radius-values;
  }

  border-radius: $radius-values;

  @if $important {
    @each $prefix in -webkit-, -moz- {
      #{$prefix}border-radius: $radius-values !important;
    }
    border-radius: $radius-values !important;
  }
}

@mixin fullWidth() {
  width: 100%;
  width: -webkit-fill-available;
  width: -moz-available;
}

@mixin boxShadow() {
  -webkit-box-shadow: 0px 0px 25px 10px rgba(0, 0, 0, 0.1);
  -moz-box-shadow: 0px 0px 25px 10px rgba(0, 0, 0, 0.1);
  box-shadow: 0px 0px 25px 10px rgba(0, 0, 0, 0.1);
}

@mixin textShadow() {
  text-shadow: 0px 0px 15px rgba(0, 0, 0, 0.3);
}

@mixin removeBoxShadow() {
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
}

@mixin boxShadowLight {
  -webkit-box-shadow: 0px 0px 15px 5px rgba(0, 0, 0, 0.05);
  -moz-box-shadow: 0px 0px 15px 5px rgba(0, 0, 0, 0.05);
  box-shadow: 0px 0px 15px 5px rgba(0, 0, 0, 0.05);
}
